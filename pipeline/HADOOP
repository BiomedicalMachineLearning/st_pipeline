There are currently two modes of running the pipeline. It can be run in a single node using
the terminal version or it can be run in several nodes using Map-Reduce with the Amazon EMR API.

NOTE : the Map Reduce version of the pipeline require the fastq input files
to be processed and merged with the Java tool called pairReadsHadoop

NOTE : the bootstrap script for Amazon EMR needs to have the compressed source code of bowtie2, 
findIndexes and pipeline libraries
Therefore, you must keep these updated in the S3 bucket

-----------------------MAP REDUCE VERSION-----------------------------------------------------------------

You need a s3 bucket with the input files, genome, annotation, ids, boostrap file, scripts and dependencies.
The output, logs and temps will be placed in the s3 bucket.

What is needed :

- boostrap.sh
- bowtie2-source.tar.gz
- findIndexes.tar.gz
- pipeline.tar.gz
- st_pipeline_emr_mapper.py (amazon emr version)
- st_pipeline_emr_combiner.py (amazon emr version)
- st_pipeline_emr_reducer.py (amazon emr version)
- input files, genome, annotation and id

Instance types :

- Master node : m1.medium
- Slave node : m1.xlarge
								  
***** RUN MAP REDUCE WITH AMAZON EMR *******

Use this set up of parameters (toy example) :

Input : s3n://stpipelinedev/experiments/emrtest/
Output : s3n://stpipelinedev/experiments/emrtest/output
Mapper : s3n://stpipelinedev/scripts/st_pipeline_emr_mapper.py --ids ids.txt --contaminant-bowtie2-index rnagenome/rnagenome --ref-annotation annotation.gtf --ref-map genome/genome 
Combiner : s3n://stpipelinedev/scripts/st_pipeline_emr_combiner.py
Reducer : s3n://stpipelinedev/scripts/st_pipeline_emr_reducer.py
Log : s3n://stpipelinedev/log

-cacheArchive s3n://stpipelinedev/config/genomes/mouse/genome.tar.gz#genome
-cacheFile s3n://stpipelinedev/config/annotations/annotation.gtf#annotation.gtf
-cacheFile s3n://stpipelinedev/config/idfiles/ids.txt#ids.txt
-cacheArchive s3n://stpipelinedev/config/contaminant_genomes/R5s/rnagenome.tar.gz#rnagenome #if used   
--bootstrap-action="s3n://stpipelinedev/scripts/bootstrap.sh"